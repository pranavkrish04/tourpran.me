I"8<p><img src="/assets/images/pwnabletw1/pwnable1.png" alt="" /></p>

<h4 id="aim">AIM:</h4>
<p>Hey guys, Here our main objective is to get a shell and then to get the flag !!
I have tried my best to explain the challenge. Hope you like it !!</p>

<h3 id="solution">Solution:</h3>

<p>First I check the mitigations :</p>

<p><img src="/assets/images/pwnabletw1/pwnable2.png" alt="" /></p>

<p>So I think it’s going to be fun !! As we have the permission to execute the stack (NX disabled). There is also no PIE so we don’t have to worry about the address changing every time :)
Now, let us run the binary and see what is happening :&gt;</p>

<p><img src="/assets/images/pwnabletw1/pwnable3.png" alt="" /></p>

<p>So it’s simple just asking input and printing something. Now its time to see the assembly behind this binary.</p>

<p><img src="/assets/images/pwnabletw1/pwnable4.png" alt="" /></p>

<p>So we can observe that all the registers are being emptied and then 5 values are beings pushed to the stack.
If we examine them we can see that they are the strings that are printed when we run the binary.
Math → 5 pushes are made and 4 bytes are taken for each push so a total of 20 bytes is taken by the binary to store it :P.
Also <code class="language-plaintext highlighter-rouge">INT 0x80</code> is equivalent to syscall. We can observe 2 syscalls being called</p>

<p><img src="/assets/images/pwnabletw1/pwnable5.png" alt="" /></p>

<p>The first syscall is used to make the write. (For printing the string)</p>

<p><img src="/assets/images/pwnabletw1/pwnable6.png" alt="" /></p>

<p>The second syscall is used to call read ( Probably to take our input ). Now let’s see what we can do to get root access !!</p>

<p>I hope you find the offset by yourself or try pattern create in gdb-peda. :)</p>

<h4 id="idea">Idea:</h4>

<ul>
  <li>We have to overflow to the return address and then we have to somehow leak the stack pointer (ESP)</li>
  <li>So if we get the stack pointers address then we can place the shellcode there and then point the EIP to that address to give us a shell!</li>
</ul>
:ET